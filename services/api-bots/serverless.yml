service: api-coins-service-${self:custom.projectName}
frameworkVersion: ">=1.44.0"

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  projectName: ${file(../../serverless.common.yml):custom.projectName}

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-west-1
  environment:
    tableName: ${file(../../serverless.common.yml):custom.generalTableName}
  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-${self:custom.projectName}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-${self:custom.projectName}-ApiGatewayRestApiRootResourceId
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - SNS:GetTopicAttributes
        - SNS:SetTopicAttributes
        - SNS:AddPermission
        - SNS:RemovePermission
        - SNS:Subscribe
        - SNS:ListSubscriptionsByTopic
        - SNS:Publish
        - SNS:Receive
      Resource:
        - '*'

plugins:
  - serverless-offline
  - serverless-webpack

functions:
  getTraderBot:
    handler: src/handler.getTraderBot
    events:
      - http:
          path: /trader-bot # Pass in botId={botId} and createdAt={createdAt} as query params
          method: get
          cors: true
  getAllTradingBots:
    handler: src/handler.getAllTradingBots
    events:
      - http:
          path: /trader-bot/all
          method: get # Pass LastEvaluatedKey via headers
          cors: true
  getAllUserTradingBotsByState:
    handler: src/handler.getAllUserTradingBotsByState
    events:
      - http:
          path: /trader-bot/user/all-by-state # Pass in a list of bot states, eg. PAUSED,FINISHED
          method: get # Pass LastEvaluatedKey via headers
          cors: true
  getAllTradingBotsByState:
    handler: src/handler.getAllTradingBotsByState
    events:
      - http:
          path: /trader-bot/all-by-state # Pass in a list of bot states, eg. PAUSED,FINISHED
          method: get # Pass LastEvaluatedKey via headers
          cors: true
  createTraderBot:
    handler: src/handler.createTraderBot
    events:
      - http:
          path: /trader-bot
          method: post
          cors: true
  stopTraderBot:
    handler: src/handler.stopTraderBot
    events:
      - http:
          path: /trader-bot/stop
          method: put
          cors: true
  pauseTraderBot:
    handler: src/handler.pauseTraderBot
    events:
      - http:
          path: /trader-bot/pause
          method: put
          cors: true
  shutDownAllTraderBots:
    handler: src/handler.shutDownAllTraderBots
    events:
      - http:
          path: /trader-bot/shutdown-all
          method: put
          cors: true
  saveTradeBotData:
    handler: src/handler.saveTradeBotData
    events:
      - http:
          path: /bots/trade/save
          method: post
          cors: true
#
#resources:
#    - ${file(../resources/cognito-policy.yml)}
